server {
    
        listen                      8080 default_server;
        server_name                 ${JENKINS_HOSTNAME};
        return 301                  https://$server_name$request_uri;

}

server {

        listen                      8443 ssl http2 default_server;
        server_name                 ${JENKINS_HOSTNAME};

        client_max_body_size        10G;
        
        # optimize downloading files larger than 1G
        proxy_max_temp_file_size    2048M;

        ssl_certificate             /etc/nginx/ssl/selfsign.crt;
        ssl_certificate_key         /etc/nginx/ssl/selfsign.key;
        
        # openssl dhparam -out /etc/nginx/ssl/dhparams.pem 2048
        ssl_dhparam                 /etc/nginx/ssl/dhparams.pem;

        ssl_prefer_server_ciphers   on;
        ssl_session_timeout         10m;
        ssl_session_cache           builtin:1000  shared:SSL:10m;
        ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers                 EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        
        access_log                  off;
        error_log                   /var/log/nginx/jenkins.error.log;
            
        location / {

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_set_header        X-Forwarded-Ssl on;
            proxy_read_timeout      300;

            # Redirect to Jenkins
            proxy_pass          http://${JENKINS_SERVICE_DNS}:8090;
            
            # Fix the â€œIt appears that your reverse proxy set up is broken" error.
            #proxy_redirect          http://${JENKINS_SERVICE_DNS}:8090; $scheme://$host;

        }

}
